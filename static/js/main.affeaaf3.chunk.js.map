{"version":3,"sources":["js/panels/profile/Profile.js","js/panels/surveys/Surveys.js","App.js","index.js"],"names":["platform","RenderSurveys","props","surveys","userSurveys","go","go_survey","itemList","map","survey","react_default","a","createElement","vkui","onClick","data-id","id","expandable","key","before","help_outline_default","title","Profile","_ref","surveyHistory","user","goToPanel","onRefresh","ballance","go_userSurvey","refreshAwaiter","size","src","photo_max_orig","first_name","last_name","asideContent","money_circle_default","level","sponsoredDone","profileDone","earnedBallance","isFetching","data-survey","Surveys","requestAwaiter","Surveys_RenderSurveys","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","debug","activeStory","view","panel","history","undefined","userBallance","onStoryChange","bind","assertThisInitialized","_this2","connect","subscribe","e","detail","type","setState","data","loadSurveys","console","log","send","questions","avilableAnswers","find","x","currentTarget","dataset","c","tabbar","selected","data-view","text","more_default","label","concat","toString","user_default","length","newsfeed_default","settings_default","activePanel","profile_Profile","userSurvey","surveys_Surveys","React","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.affeaaf3.chunk.js","sourcesContent":["import React from 'react';\r\nimport { Panel, Group, Button, Div, Cell, List, Avatar, PanelHeader, PullToRefresh, HeaderButton, platform, IOS } from '@vkontakte/vkui';\r\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\r\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\r\nimport Icon28HelpOutline from '@vkontakte/icons/dist/28/help_outline';\r\nimport Icon24MoneyCircle from '@vkontakte/icons/dist/24/money_circle';\r\nconst osname = platform();\r\n\r\nfunction RenderSurveys(props) {\r\n\tconst surveys = props.userSurveys;\r\n\tconst go = props.go_survey;\r\n\tvar itemList = surveys.map((survey) =>\r\n\t\t<Cell onClick={go} data-id={survey.id} expandable key={survey.id} before={<Icon28HelpOutline />}>{survey.title}</Cell>\r\n\t);\r\n\treturn <List>{itemList}</List>\r\n}\r\nconst Profile = ({ id, surveyHistory, goToPanel, user, onRefresh, ballance, go_userSurvey, userSurveys, refreshAwaiter }) => (\r\n\t<Panel id={id}>\r\n\t\t<PanelHeader>\r\n\t\t\tПрофиль\r\n\t\t</PanelHeader>\r\n\r\n\t\t<Group title=\"Общие данные\">\r\n\t\t\t{user &&\r\n\t\t\t\t<Cell\r\n\t\t\t\t\tsize=\"m\"\r\n\t\t\t\t\tbefore={<Avatar src={user.photo_max_orig} size={80} />}>\r\n\t\t\t\t\t{user.first_name} {user.last_name}\r\n\t\t\t\t</Cell>\r\n\t\t\t}\r\n\t\t</Group>\r\n\t\t<Group title=\"Баланс\">\r\n\t\t\t<Cell size=\"l\" asideContent={ballance > 0 &&\r\n\t\t\t\t<Button before={<Icon24MoneyCircle />} level=\"sell\">вывести</Button>\r\n\t\t\t} >\r\n\t\t\t\t{ballance} баллов\r\n\r\n\t\t\t</Cell>\r\n\t\t</Group>\r\n\t\t<Group title=\"Статистика\">\r\n\t\t\t{surveyHistory &&\r\n\t\t\t\t<Cell size=\"l\">\r\n\t\t\t\t\t{surveyHistory.sponsoredDone} оплачиваемых опросов пройдено\r\n\t\t\t\t</Cell>\r\n\t\t\t\t\r\n\t\t\t}\r\n\t\t\t{surveyHistory &&\r\n\t\t\t<Cell size=\"l\">\r\n\t\t\t\t{surveyHistory.profileDone} профильных опросов пройдено\r\n\t\t\t</Cell>\r\n\t\t\t}\r\n\t\t\t{surveyHistory &&\r\n\t\t\t<Cell size=\"l\">\r\n\t\t\t\t{surveyHistory.earnedBallance} заработано баллов на опросах\r\n\t\t\t</Cell>\r\n\t\t\t}\t\t\r\n\r\n\t\t</Group>\r\n\r\n\t\t<PullToRefresh onRefresh={onRefresh} isFetching={refreshAwaiter}>\r\n\t\t\t{userSurveys &&\r\n\t\t\t\t<RenderSurveys userSurveys={userSurveys} go_survey={go_userSurvey}></RenderSurveys>\r\n\t\t\t}\r\n\t\t</PullToRefresh>\r\n\t</Panel>\r\n);\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport {Panel, Cell, List,  PanelHeader, PullToRefresh,HeaderButton, Group, platform, IOS} from '@vkontakte/vkui';\r\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\r\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\r\nimport Icon28HelpOutline from '@vkontakte/icons/dist/28/help_outline';\r\n\r\nconst osname = platform();\r\n\r\nfunction RenderSurveys(props){\r\n\tconst surveys = props.surveys;\r\n\tconst go = props.go_survey;\r\n\tvar itemList = surveys.map((survey)=>\t  \t\t\r\n\t  \t\t<Cell onClick={go} data-survey={survey.title} expandable key={survey.id} before={<Icon28HelpOutline />}>{survey.title}</Cell>\r\n\t);\r\n\treturn itemList;\r\n}\r\nconst Surveys = ({id, go, user, onRefresh, surveys, refreshAwaiter, requestAwaiter, go_survey}) => (\r\n\t<Panel id={id}>\r\n\t\t<PanelHeader>\t\r\n\t\t\tСписок отпросов\t\r\n\t\t</PanelHeader>\r\n\t\t<Group title=\"Оплачиваемые опросы\">\r\n\t\t{surveys &&\t\r\n\t\t\t\t\t<RenderSurveys go_survey={go_survey} requestAwaiter={requestAwaiter} surveys={surveys} go={go}></RenderSurveys>  \t\t\t\t\r\n\t\t\t}\t\t\r\n\t\t<PullToRefresh onRefresh={onRefresh} isFetching={refreshAwaiter}>\r\n\t\t\t\r\n\t\t</PullToRefresh>\r\n\t\t</Group>\r\n\t</Panel>\r\n);\r\n\r\nexport default Surveys;\r\n","import Icon28Newsfeed from '@vkontakte/icons/dist/28/newsfeed';\nimport Icon28User from '@vkontakte/icons/dist/28/user';\nimport Icon28More from '@vkontakte/icons/dist/28/more';\nimport Icon28Settings from '@vkontakte/icons/dist/28/settings';\n\nimport React from 'react';\nimport connect from '@vkontakte/vkui-connect';\nimport {\n    Root,\n    View,\n    ScreenSpinner, PanelHeader,\n    Epic,\n    Tabbar,\n    Panel,\n    TabbarItem,\n    Icon\n} from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css'\n\nimport ProfileBase from './js/panels/profile/Profile';\nimport SurveysBase from './js/panels/surveys/Surveys';\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            debug: true,\n            activeStory: { view: 'profile', panel: 'base' },\n            history: [{\n                view: 'profile',\n                panel: 'base'\n            }],\n            user: undefined,\n            userBallance:15,\n            surveyHistory: {\n                sponsoredDone:0,\n                profileDone:0,\n                earnedBallance: 0\n            } ,\n            surveys: [],\n            userSurveys: [],\n\n\n        };\n        this.onStoryChange = this.onStoryChange.bind(this);\n    }\n    componentDidMount() {\n        //axios.get('https://web20190521031103.azurewebsites.net/' ).then((x)=>this.setState({dataSurveys: x.data}));\n        connect.subscribe((e) => {\n            switch (e.detail.type) {\n                case 'VKWebAppGetUserInfoResult':\n                    this.setState({ user: e.detail.data })\n                    this.loadSurveys();\n                    break;\n                default:\n                    console.log(e.detail.type);\n            }\n        });\n        connect.send('VKWebAppGetUserInfo', {});\n    }\n    ///#region surveys\n\n    //Тут данные грузятся-баланс, пройденные опросы, новые опросы\n    loadSurveys() {\n        if (this.state.debug) {\n            var _surveys = [\n                {\n                    title: \"Опрос с radioButton\", id: \"0\",\n                    questions: [\n                        {\n                            id: \"-1\",\n                            title: \"Слайдни!\",\n                            type: \"slider\",\n                            avilableAnswers: [\n                               \n                            ]\n                        }\n                    ]\n                },\n                {\n                    title: \"Опрос с чекбоксом\", id: \"1\",\n                    questions: [\n                        {\n                            id: \"0\",\n                            title: \"Чо каво?\",\n                            type: \"checkbox\",\n                            avilableAnswers: [\n                                {\n                                    id: \"0\",\n                                    title: \"да\"\n                                },\n                                {\n                                    id: \"1\",\n                                    title: \"нет\"\n                                }\n                            ]\n                        }\n                    ]\n                },\n                {\n                    title: \"Опрос со слайдером\", id: \"2\",\n                    questions: [\n                        {\n                            id: \"2\",\n                            title: \"Слайдни!\",\n                            type: \"slider\",\n                            avilableAnswers: [\n                               \n                            ]\n                        }\n                    ]\n                },\n                \n                {\n                    title: \"Опрос со строкой\", id: \"3\",\n                    questions: [\n                        {\n                            id: \"3\",\n                            title: \"Пешы!\",\n                            type: \"string\",\n                            avilableAnswers: [\n                               \n                            ]\n                        }\n                    ]\n                },\n                {\n                    title: \"Опрос с перемещением приоритета\", id: \"4\",\n                    questions: [\n                        {\n                            id: \"4\",\n                            title: \"Слайдни!\",\n                            type: \"move\",\n                            avilableAnswers: [\n                               \n                            ]\n                        }\n                    ]\n                }];\n            var surveyHistory = {\n                sponsoredDone:12,\n                profileDone:5,\n                earnedBallance: 15\n            }\n\n            this.setState({ surveys: _surveys, surveyHistory:surveyHistory });\n\n        }\n\n    }\n\n\n\n\n    ///\n\n\n\n    activePanel(e) {\n        var activePanel = this.state.history.find((x) => {\n            return x.view == e.currentTarget.dataset.view\n        })\n\n    }\n\n    onStoryChange(e) {\n        var c = this.state.activeStory;\n        c.view = e.currentTarget.dataset.view;\n        this.setState({ activeStory: c })\n    }\n\n    render() {\n\n        return (\n            <Epic activeStory={this.state.activeStory.view} tabbar={\n                <Tabbar>\n                     <TabbarItem\n                        onClick={this.onStoryChange}\n                        selected={this.state.activeStory.view === 'info'}\n                        data-view=\"info\"\n                        text=\"Информация\"\n                    ><Icon28More /></TabbarItem>\n                    <TabbarItem\n                        onClick={this.onStoryChange}\n                        selected={this.state.activeStory.view === 'profile'}\n                        data-view=\"profile\"\n                        text=\"Профиль\"\n                        label={`${this.state.userBallance.toString()}`}\n                    ><Icon28User /></TabbarItem>\n                   \n                    <TabbarItem\n                        onClick={this.onStoryChange}\n                        selected={this.state.activeStory.view === 'surveys'}\n                        data-view=\"surveys\"\n                        label={this.state.surveys.length.toString()}\n                        text=\"Опросы\"\n                    ><Icon28Newsfeed /></TabbarItem>\n                  \n                    <TabbarItem\n                        onClick={this.onStoryChange}\n                        selected={this.state.activeStory.view === 'settings'}\n                        data-view=\"settings\"\n                        text=\"Настройки\"\n                    ><Icon28Settings /></TabbarItem>\n\n                </Tabbar>\n            }>\n                 <View id=\"info\" activePanel=\"base\">\n                    <Panel id=\"base\">\n                        <PanelHeader>Информация всякая</PanelHeader>\n                    </Panel>\n                </View>\n                <View id=\"profile\" activePanel=\"base\">\n                    <ProfileBase id=\"base\" surveyHistory={this.state.surveyHistory} ballance={this.state.userBallance} go={this.go} go_userSurvey={this.userSurvey} user={this.state.user} userSurveys={this.state.userSurveys} />\n                </View>\n                \n                <View id=\"surveys\" activePanel=\"base\">\n                    <SurveysBase id=\"base\" onRefresh={this.loadSurveys} surveys={this.state.surveys} user={this.state.user} />\n                </View>\n                \n                <View id=\"settings\" activePanel=\"base\">\n                    <Panel id=\"base\">\n                        <PanelHeader>Настройки</PanelHeader>\n                    </Panel>\n                </View>\n            </Epic>\n        )\n    }\n}\n\nexport default App;","import 'core-js/es6/map';\nimport 'core-js/es6/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vkui-connect';\nimport App from './App';\n// import registerServiceWorker from './sw';\n\n// Init VK App\nconnect.send('VKWebAppInit', {});\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT \n// registerServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}